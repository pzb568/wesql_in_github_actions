name: 启动 WeSQL 数据库

on:
  workflow_dispatch: # 允许手动触发工作流

concurrency:
  group: start_wesql_database # 确保只有一个 WeSQL 数据库启动工作流在运行
  cancel-in-progress: true    # 取消旧的同名工作流

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # ========== 环境准备阶段 ==========
      - name: 检查必要 Secrets
        env:
          SECRET_WESQL_ROOT_PASSWORD: ${{ secrets.WESQL_ROOT_PASSWORD }}
          SECRET_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          SECRET_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          SECRET_R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          SECRET_R2_ENDPOINT_URL: ${{ secrets.R2_ENDPOINT_URL }}
        run: |
          echo "开始检查必要的Secrets..."
          required_secrets=(
            "SECRET_WESQL_ROOT_PASSWORD"
            "SECRET_R2_ACCESS_KEY_ID"
            "SECRET_R2_SECRET_ACCESS_KEY"
            "SECRET_R2_BUCKET_NAME"
            "SECRET_R2_ENDPOINT_URL"
          )
          missing_secrets=0
          for secret_name in "${required_secrets[@]}"; do
            if [ -z "${!secret_name}" ]; then
              echo "::error::缺少必要的Secret: ${secret_name#SECRET_}"
              missing_secrets=$((missing_secrets + 1))
            fi
          done
          if [ $missing_secrets -gt 0 ]; then
            echo "::error::共缺少 $missing_secrets 个必要的Secrets"
            exit 1
          fi
          echo "所有必要的Secrets检查通过"

      - name: 安装必要工具
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y openssh-client lsof net-tools python3-pip
          if ! docker info >/dev/null 2>&1; then
            echo "::error::Docker 服务不可用"
            exit 1
          fi
          pip3 install awscli

      - name: 配置 AWS CLI
        run: |
          set -e
          aws configure set aws_access_key_id "${{ secrets.R2_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.R2_SECRET_ACCESS_KEY }}"
          aws configure set default.region "auto"
          aws configure set default.s3.signature_version s3v4
          aws configure set default.s3.endpoint_url "${{ secrets.R2_ENDPOINT_URL }}"

      # ========== 数据库部署阶段 ==========
      - name: 清理旧容器
        run: |
          set -e
          if docker inspect wesql-server >/dev/null 2>&1; then
            echo "停止并移除现有容器..."
            docker stop wesql-server || true
            docker rm -f wesql-server || true
            docker volume rm wesql-data || true
          fi

      - name: 准备 MySQL 配置
        run: |
          set -e
          cat > mysql_custom.cnf <<EOF
          [mysqld]
          port=3306
          log-bin=binlog
          gtid_mode=ON
          enforce_gtid_consistency=ON
          log_slave_updates=ON
          binlog_format=ROW
          EOF

      - name: 启动 WeSQL 服务器
        id: start_container
        timeout-minutes: 10
        run: |
          set -ex
          MANAGEMENT_PORT=$(comm -23 <(seq 20000 30000 | sort) <(ss -tan | awk '{print $4}' | cut -d':' -f2 | sort -u) | shuf | head -n1)
          echo "MANAGEMENT_PORT=${MANAGEMENT_PORT}" >> $GITHUB_ENV
          
          docker run -d \
            --name wesql-server \
            --restart unless-stopped \
            -p 3306:3306 \
            -p ${MANAGEMENT_PORT}:13306 \
            -v wesql-data:/data/mysql \
            -v "$(pwd)/mysql_custom.cnf:/etc/mysql/conf.d/custom.cnf" \
            -e WESQL_CLUSTER_MEMBER="127.0.0.1:${MANAGEMENT_PORT}" \
            -e MYSQL_ROOT_PASSWORD="${{ secrets.WESQL_ROOT_PASSWORD }}" \
            -e WESQL_OBJECTSTORE_ACCESS_KEY="${{ secrets.R2_ACCESS_KEY_ID }}" \
            -e WESQL_OBJECTSTORE_SECRET_KEY="${{ secrets.R2_SECRET_ACCESS_KEY }}" \
            -e WESQL_OBJECTSTORE_ENDPOINT_URL="${{ secrets.R2_ENDPOINT_URL }}" \
            -e WESQL_OBJECTSTORE_PROVIDER="s3" \
            -e WESQL_OBJECTSTORE_BUCKET="${{ secrets.R2_BUCKET_NAME }}" \
            -e WESQL_OBJECTSTORE_REGION="auto" \
            -e WESQL_OBJECTSTORE_REPO_ID="tutorial" \
            -e WESQL_OBJECTSTORE_BRANCH_ID="main" \
            apecloud/wesql-server:8.0.35

          echo "等待容器初始化..."
          sleep 20
          docker logs wesql-server --tail 50

      # ========== 连接配置阶段 ==========
      - name: 等待 MySQL 启动
        timeout-minutes: 5
        run: |
          set -e
          for i in {1..30}; do
            if docker exec -e MYSQL_PWD="${{ secrets.WESQL_ROOT_PASSWORD }}" wesql-server \
              mysqladmin ping -u root --silent; then
              echo "MySQL 已成功启动"
              exit 0
            fi
            echo "等待MySQL启动(${i}/30)..."
            sleep 5
          done
          echo "::error::MySQL 启动超时"
          docker logs wesql-server
          exit 1

      - name: 设置 SSH 隧道
        id: ssh_tunnel
        timeout-minutes: 5
        run: |
          set -e
          TUNNEL_LOCAL_PORT=$(comm -23 <(seq 30000 40000 | sort) <(ss -tan | awk '{print $4}' | cut -d':' -f2 | sort -u) | shuf | head -n1)
          echo "TUNNEL_LOCAL_PORT=${TUNNEL_LOCAL_PORT}" >> $GITHUB_ENV
          
          sudo apt-get install -y autossh
          autossh -M 0 -o "ServerAliveInterval 30" -o "ServerAliveCountMax 3" \
            -o "ExitOnForwardFailure=yes" -N -R 0:localhost:3306 serveo.net > serveo.log 2>&1 &
          
          sleep 10
          TUNNEL_INFO=$(grep -m1 "Forwarding TCP" serveo.log || true)
          if [ -z "$TUNNEL_INFO" ]; then
            echo "::error::SSH隧道建立失败"
            cat serveo.log
            exit 1
          fi
          
          HOST_PORT=$(echo "$TUNNEL_INFO" | awk '{print $NF}')
          echo "HOST=$(echo "${HOST_PORT}" | cut -d':' -f1)" >> $GITHUB_ENV
          echo "PORT=$(echo "${HOST_PORT}" | cut -d':' -f2)" >> $GITHUB_ENV
          echo "连接隧道已建立: ${HOST_PORT}"

      # ========== 信息输出阶段 ==========
      - name: 生成连接信息
        run: |
          cat > connection_info.txt <<EOF
          ========================
          WeSQL 数据库连接信息
          ========================
          主机: ${{ env.HOST }}
          端口: ${{ env.PORT }}
          用户名: root
          密码: [保密]
          管理端口: ${{ env.MANAGEMENT_PORT }}
          ------------------------
          有效期: 6小时
          ========================
          EOF
          cat connection_info.txt

      - name: 上传连接信息到R2
        run: |
          aws s3 cp connection_info.txt "s3://${{ secrets.R2_BUCKET_NAME }}/wesql_connection_$(date +%s).txt"

      # ========== 服务维持阶段 ==========
      - name: 保持服务运行
        timeout-minutes: 360
        run: |
          echo "服务已启动，将持续运行6小时"
          echo "公网访问地址: ${{ env.HOST }}:${{ env.PORT }}"
          while true; do
            if ! docker ps | grep -q wesql-server; then
              echo "::error::容器异常停止"
              exit 1
            fi
            sleep 60
          done

      - name: 清理资源
        if: always()
        run: |
          echo "正在清理资源..."
          docker stop wesql-server || true
          docker rm -f wesql-server || true
          pkill -f autossh || true
          echo "资源清理完成"
